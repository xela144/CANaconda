TO DO:
 * Recording as CSV doesn't actually do that, it records whatever is in the 
   message browser. Fix.
 * Test to make sure that code works from command-line without PyQt installed.
 * To test functionality w/o certain libraries, use `virtualenv`. This lets you run 
   multiple instances of Python with their own packages.
 * Add a global reset button. The same function should be callsed when a new xml 
   file is loaded.
 * Support current xmltest.txt file (the Instance field for PGN 130311)
 * Restrict files to select only '.xml' files in the file selector dialog
 * Specifying a filter for a data field should not show that message in the window 
   at all even if other data fields in that message don't have a filter. 
   The filter should be specified by field but applied per message. The 'latest value'
   isn't working either in this respect.
 * Fix redundant names in tablewidget
 * Since we are not requiring an ID for each message in the metadata, the transmit
   function throws a keyError exception when a message is transmitted whose node is
   not on the bus.
 * The transmission function does not do any error checking in the GUI.
 * Further separate the threads to make code re-usable.
 * Raw message viewing in GUI is spewing all messages even if none are selected
   in the table widget



I'd also like to be able to filter by multiple identical IDs or PGN numbers
with possibly different conditions. This means that you will probably want
to convert you dictionary/set of filter objects to actually be a dict/set of
lists containing all of the views related to those IDs or PGNs.

For example, I have a message with an ID 90, where the first byte indicates
which node is transmitting this message. So I'd like to see the data from
these messages independently. For example if I have my rudder node and my RC
node, I'll see messages like {ID:90, data:[3 ...]} and {ID:90, data:[2 ...]},
but I'd want them shown separately. Something like
--filters='NODE_STATUS[node=3],NODE_STATUS[node=2]{status,errors}, where this
would indicate that I want to see data from two separate instances of the
NODE_STATUS message, one where the 'node' field is 3 (and all of its fields),
and another where the 'node' field is 2 (and I only want to see the 'status'
and 'errors' fields.

--filter='NODE_STATUS[node=3],NODE_STATUS[node=2]{status,errors}
--filter='WSO100[airspeed=3]{wind_dir},NODE_STATUS[node=2]{status,errors}
--filter='WSO100{airspeed=3,wind_dir},NODE_STATUS{node=2,status,errors}

output:
{ID:90, body:[3 ...]}
{ID:90, body:[2 ...]}



##

PGNs generated by dst800:
{'128267', '130310', '128275', '128259'}

